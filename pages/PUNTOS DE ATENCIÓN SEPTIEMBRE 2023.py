# -*- coding: utf-8 -*-
"""
Created on Tue Oct 17 10:52:09 2023

@author: jperezr
"""

import json

import requests  # pip install requests
import streamlit as st  # pip install streamlit
from streamlit_lottie import st_lottie  # pip install streamlit-lottie
import pandas as pd

def load_lottieurl(url: str):
    r = requests.get(url)
    if r.status_code != 200:
        return None
    return r.json()



lottie_hello = load_lottieurl("https://lottie.host/6f4ee854-3625-4849-8985-e423a0752949/hZWZsrb0zk.json")

st.title("PUNTOS DE ATENCIÓN SEPTIEMBRE 2023")

st.subheader(" ")
st.subheader(" ")

# Load your data (replace with your actual data source)
data = pd.DataFrame({
    'estado': ['CIUDAD DE MEXICO',
'OAXACA',
'COAHUILA',
'YUCATAN',
'JALISCO',
'ESTADO DE MEXICO',
'TLAXCALA',
'TAMAULIPAS',
'VERACRUZ',
'CHIHUAHUA',
'BAJA CALIFORNIA SUR',
'SONORA',
'HIDALGO',
'CHIAPAS',
'QUERETARO',
'CAMPECHE',
'NUEVO LEON',
'AGUASCALIENTES',
'GUANAJUATO',
'DURANGO',
'COLIMA',
'SINALOA',
'NAYARIT',
'BAJA CALIFORNIA',
'PUEBLA',
'MICHOACAN',
'QUINTANA ROO',
'TABASCO',
'ZACATECAS',
'MORELOS',
'CIUDAD DE MEXICO',
'SAN LUIS POTOSI',
'GUERRERO',
'CHIHUAHUA',
'DURANGO',
'CHIAPAS',
'BAJA CALIFORNIA',
'QUINTANA ROO',
'SONORA',
'CIUDAD DE MEXICO',
'ESTADO DE MEXICO',
'ESTADO DE MEXICO',
'ESTADO DE MEXICO',
'VERACRUZ',
'CIUDAD DE MEXICO',
'NUEVO LEON',
'COAHUILA',
'TAMAULIPAS',
'ESTADO DE MEXICO',
'QUERETARO',
'CIUDAD DE MEXICO',
'JALISCO',
'CIUDAD DE MEXICO',
'AGUASCALIENTES',
'CHIAPAS',
'SAN LUIS POTOSI',
'CIUDAD DE MEXICO'],
    
    
    'ciudad': ['CIUDAD DE MEXICO',
'OAXACA',
'SALTILLO',
'MERIDA',
'GUADALAJARA',
'TOLUCA',
'TLAXCALA',
'CIUDAD VICTORIA',
'XALAPA',
'CHIHUAHUA',
'LA PAZ',
'HERMOSILLO',
'PACHUCA DE SOTO',
'TUXTLA GUTIERREZ',
'QUERETARO',
'CAMPECHE',
'MONTERREY',
'AGUASCALIENTES',
'CELAYA',
'DURANGO',
'COLIMA',
'CULIACAN',
'TEPIC',
'MEXICALI',
'PUEBLA',
'MORELIA',
'CHETUMAL',
'VILLAHERMOSA',
'ZACATECAS',
'CUERNAVACA',
'CIUDAD DE MEXICO',
'SAN LUIS POTOSI',
'ACAPULCO',
'CIUDAD JUAREZ',
'GOMEZ PALACIO',
'TAPACHULA',
'TIJUANA',
'CANCUN',
'CIUDAD OBREGON',
'CIUDAD DE MEXICO',
'IXTAPALUCA',
'TULTITLAN',
'CUAUTITLAN IZCALLI',
'COATZACOALCOS',
'CIUDAD DE MEXICO',
'MONTERREY',
'RAMOS ARIZPE',
'REYNOSA',
'ECATEPEC DE MORELOS',
'SAN JUAN DEL RIO',
'CIUDAD DE MEXICO',
'GUADALAJARA',
'CIUDAD DE MEXICO',
'AGUASCALIENTES',
'SAN CRISTOBAL DE LAS CASAS',
'CIUDAD VALLES',
'CIUDAD DE MEXICO'],
})



Año_filter = st.multiselect('Selecccione el Estado', options=list(data['estado'].unique()), default=list(data['estado'].unique()))
#Afore_filter = st.multiselect('Selecccione el estado', options=list(data['estado'].unique()), default=list(data['estado'].unique()))


datos_filter = data[data['estado'].isin(Año_filter)]


st.write(datos_filter)

####################################################################################################################################################


st.subheader("")
st.subheader("")
st.subheader("")


map_data = {"Estado": ["CIUDAD DE MEXICO",
"OAXACA",
"COAHUILA",
"YUCATAN",
"JALISCO",
"ESTADO DE MEXICO",
"TLAXCALA",
"TAMAULIPAS",
"VERACRUZ",
"CHIHUAHUA",
"BAJA CALIFORNIA SUR",
"SONORA",
"HIDALGO",
"CHIAPAS",
"QUERETARO",
"CAMPECHE",
"NUEVO LEON",
"AGUASCALIENTES",
"GUANAJUATO",
"DURANGO",
"COLIMA",
"SINALOA",
"NAYARIT",
"BAJA CALIFORNIA",
"PUEBLA",
"MICHOACAN",
"QUINTANA ROO",
"TABASCO",
"ZACATECAS",
"MORELOS",
"CIUDAD DE MEXICO",
"SAN LUIS POTOSI",
"GUERRERO",
"CHIHUAHUA",
"DURANGO",
"CHIAPAS",
"BAJA CALIFORNIA",
"QUINTANA ROO",
"SONORA",
"CIUDAD DE MEXICO",
"ESTADO DE MEXICO",
"ESTADO DE MEXICO",
"ESTADO DE MEXICO",
"VERACRUZ",
"CIUDAD DE MEXICO",
"NUEVO LEON",
"COAHUILA",
"TAMAULIPAS",
"ESTADO DE MEXICO",
"QUERETARO",
"CIUDAD DE MEXICO",
"JALISCO",
"CIUDAD DE MEXICO",
"AGUASCALIENTES",
"CHIAPAS",
"SAN LUIS POTOSI",
"CIUDAD DE MEXICO"],
    
    
    "latitude":[19.4448420,
17.0771560,
25.4462940,
20.9927598,
20.6849620,
19.2922765,
19.3246045,
23.7320460,
19.5607808,
28.6180364,
24.1484360,
29.0680158,
20.1162570,
16.7513094,
20.5930070,
19.8537408,
25.6712230,
21.8788660,
20.5322690,
24.0211620,
19.2725480,
24.8198090,
21.5072020,
32.6418060,
19.0516960,
19.7280990,
18.4935890,
18.0004660,
22.7430220,
18.9244110,
19.3843930,
22.1504450,
16.8540200,
31.7349424,
25.5545574,
14.8993629,
32.4949210,
21.1539820,
27.4814187,
19.3574074,
19.3572844,
19.6416550,
19.6857200,
18.1425219,
19.3762289,
25.7001902,
25.5486569,
26.0737540,
19.6044288,
20.3941780,
19.3167491,
20.6630626,
19.3286155,
21.8919916,
16.7443033,
21.9873727,
19.4136232],
        "longitude":[-99.1519020,
-96.7069450,
-100.9949010,
-89.6115249,
-103.3473740,
-99.6233734,
-98.2339656,
-99.1300710,
-96.9290164,
-106.1034114,
-110.3052730,
-110.9578327,
-98.7422390,
-93.1069386,
-100.4062770,
-90.5283937,
-100.3376190,
-102.2927330,
-100.8271530,
-104.6712330,
-103.7349670,
-107.4083580,
-104.9005490,
-115.4523420,
-98.2130720,
-101.2232810,
-88.2962400,
-92.9258710,
-102.4971950,
-99.2176650,
-99.1485840,
-100.9875310,
-99.8571970,
-106.4435867,
-103.5080860,
-92.2495908,
-116.9351520,
-86.8383440,
-109.9272276,
-99.1987345,
-99.1984595,
-99.1359530,
-99.2136460,
-94.4848837,
 -99.0955446,
-100.3093165,
-100.9437106,
-98.3186850,
-99.0123901,
-99.9845350,
-99.1237739,
-103.2965445,
-99.1086078,
-102.2971318,
-92.6342542,
-99.0108345,
-99.1813129]}
 
df = pd.DataFrame(map_data)
#st.write(df)
st.map(data=df)



